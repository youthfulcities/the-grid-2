"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/chartjs-plugin-deferred";
exports.ids = ["vendor-chunks/chartjs-plugin-deferred"];
exports.modules = {

/***/ "(ssr)/./node_modules/chartjs-plugin-deferred/dist/chartjs-plugin-deferred.esm.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/chartjs-plugin-deferred/dist/chartjs-plugin-deferred.esm.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ plugin)\n/* harmony export */ });\n/* harmony import */ var chart_js_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! chart.js/helpers */ \"(ssr)/./node_modules/chart.js/helpers/helpers.js\");\n/*!\n * chartjs-plugin-deferred v2.0.0\n * https://chartjs-plugin-deferred.netlify.app\n * (c) 2016-2022 chartjs-plugin-deferred contributors\n * Released under the MIT license\n */ \nvar STUB_KEY = \"$chartjs_deferred\";\nvar MODEL_KEY = \"$deferred\";\n/**\n * Plugin based on discussion from Chart.js issue #2745.\n * @see https://github.com/chartjs/Chart.js/issues/2745\n */ function defer(fn, delay) {\n    if (delay) {\n        window.setTimeout(fn, delay);\n    } else {\n        chart_js_helpers__WEBPACK_IMPORTED_MODULE_0__.requestAnimFrame.call(window, fn);\n    }\n}\nfunction computeOffset(value, base) {\n    var number = parseInt(value, 10);\n    if (isNaN(number)) {\n        return 0;\n    } else if (typeof value === \"string\" && value.indexOf(\"%\") !== -1) {\n        return number / 100 * base;\n    }\n    return number;\n}\nfunction chartInViewport(chart) {\n    var options = chart[MODEL_KEY].options;\n    var canvas = chart.canvas;\n    // https://stackoverflow.com/a/21696585\n    if (!canvas || canvas.offsetParent === null) {\n        return false;\n    }\n    var rect = canvas.getBoundingClientRect();\n    var dy = computeOffset(options.yOffset || 0, rect.height);\n    var dx = computeOffset(options.xOffset || 0, rect.width);\n    return rect.right - dx >= 0 && rect.bottom - dy >= 0 && rect.left + dx <= window.innerWidth && rect.top + dy <= window.innerHeight;\n}\nfunction onScroll(event) {\n    var node = event.target;\n    var stub = node[STUB_KEY];\n    if (stub.ticking) {\n        return;\n    }\n    stub.ticking = true;\n    defer(function() {\n        var charts = stub.charts.slice();\n        var ilen = charts.length;\n        var chart, i;\n        for(i = 0; i < ilen; ++i){\n            chart = charts[i];\n            if (chartInViewport(chart)) {\n                unwatch(chart); // eslint-disable-line\n                chart[MODEL_KEY].appeared = true;\n                chart.update();\n            }\n        }\n        stub.ticking = false;\n    });\n}\nfunction isScrollable(node) {\n    var type = node.nodeType;\n    if (type === Node.ELEMENT_NODE) {\n        var overflowX = (0,chart_js_helpers__WEBPACK_IMPORTED_MODULE_0__.getStyle)(node, \"overflow-x\");\n        var overflowY = (0,chart_js_helpers__WEBPACK_IMPORTED_MODULE_0__.getStyle)(node, \"overflow-y\");\n        return overflowX === \"auto\" || overflowX === \"scroll\" || overflowY === \"auto\" || overflowY === \"scroll\";\n    }\n    return node.nodeType === Node.DOCUMENT_NODE;\n}\nfunction watch(chart) {\n    var canvas = chart.canvas;\n    var parent = canvas.parentElement;\n    var stub, charts;\n    while(parent){\n        if (isScrollable(parent)) {\n            stub = parent[STUB_KEY] || (parent[STUB_KEY] = {});\n            charts = stub.charts || (stub.charts = []);\n            if (charts.length === 0) {\n                parent.addEventListener(\"scroll\", onScroll);\n            }\n            charts.push(chart);\n            chart[MODEL_KEY].elements.push(parent);\n        }\n        parent = parent.parentElement || parent.ownerDocument;\n    }\n}\nfunction unwatch(chart) {\n    chart[MODEL_KEY].elements.forEach(function(element) {\n        var charts = element[STUB_KEY].charts;\n        charts.splice(charts.indexOf(chart), 1);\n        if (!charts.length) {\n            element.removeEventListener(\"scroll\", onScroll);\n            delete element[STUB_KEY];\n        }\n    });\n    chart[MODEL_KEY].elements = [];\n}\nvar plugin = {\n    id: \"deferred\",\n    defaults: {\n        xOffset: 0,\n        yOffset: 0,\n        delay: 0\n    },\n    beforeInit: function(chart, _, options) {\n        chart[MODEL_KEY] = {\n            options: options,\n            appeared: false,\n            delayed: false,\n            loaded: false,\n            elements: []\n        };\n        watch(chart);\n    },\n    beforeDatasetsUpdate: function(chart, _, options) {\n        var model = chart[MODEL_KEY];\n        if (!model.loaded) {\n            if (!model.appeared && !chartInViewport(chart)) {\n                // cancel the datasets update\n                return false;\n            }\n            model.appeared = true;\n            model.loaded = true;\n            unwatch(chart);\n            if (options.delay > 0) {\n                model.delayed = true;\n                defer(function() {\n                    // Ensure the chart instance is still alive. It may have been destroyed\n                    // during a delay and calling `chart.update()` will fail. The most common\n                    // reason for such scenario is user navigation.\n                    // https://github.com/chartjs/chartjs-plugin-deferred/pull/14\n                    if (chart.ctx) {\n                        model.delayed = false;\n                        chart.update();\n                    }\n                }, options.delay);\n                return false;\n            }\n        }\n        if (model.delayed) {\n            // in case of delayed update, ensure to block external requests, such\n            // as interacting with the legend label, or direct calls to update()\n            return false;\n        }\n    },\n    destroy: function(chart) {\n        unwatch(chart);\n    }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/chartjs-plugin-deferred/dist/chartjs-plugin-deferred.esm.js\n");

/***/ })

};
;