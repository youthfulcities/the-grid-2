"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/immer";
exports.ids = ["vendor-chunks/immer"];
exports.modules = {

/***/ "(ssr)/./node_modules/immer/dist/immer.esm.js":
/*!**********************************************!*\
  !*** ./node_modules/immer/dist/immer.esm.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Immer: () => (/* binding */ un),\n/* harmony export */   applyPatches: () => (/* binding */ pn),\n/* harmony export */   castDraft: () => (/* binding */ K),\n/* harmony export */   castImmutable: () => (/* binding */ $),\n/* harmony export */   createDraft: () => (/* binding */ ln),\n/* harmony export */   current: () => (/* binding */ D),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   enableAllPlugins: () => (/* binding */ J),\n/* harmony export */   enableES5: () => (/* binding */ N),\n/* harmony export */   enableMapSet: () => (/* binding */ C),\n/* harmony export */   enablePatches: () => (/* binding */ T),\n/* harmony export */   finishDraft: () => (/* binding */ dn),\n/* harmony export */   freeze: () => (/* binding */ d),\n/* harmony export */   immerable: () => (/* binding */ L),\n/* harmony export */   isDraft: () => (/* binding */ t),\n/* harmony export */   isDraftable: () => (/* binding */ r),\n/* harmony export */   nothing: () => (/* binding */ H),\n/* harmony export */   original: () => (/* binding */ e),\n/* harmony export */   produce: () => (/* binding */ fn),\n/* harmony export */   produceWithPatches: () => (/* binding */ cn),\n/* harmony export */   setAutoFreeze: () => (/* binding */ sn),\n/* harmony export */   setUseProxies: () => (/* binding */ vn)\n/* harmony export */ });\nfunction n(n) {\n    for(var t = arguments.length, r = Array(t > 1 ? t - 1 : 0), e = 1; e < t; e++)r[e - 1] = arguments[e];\n    if (true) {\n        var i = Y[n], o = i ? \"function\" == typeof i ? i.apply(null, r) : i : \"unknown error nr: \" + n;\n        throw Error(\"[Immer] \" + o);\n    }\n    throw Error(\"[Immer] minified error nr: \" + n + (r.length ? \" \" + r.map(function(n) {\n        return \"'\" + n + \"'\";\n    }).join(\",\") : \"\") + \". Find the full error at: https://bit.ly/3cXEKWf\");\n}\nfunction t(n) {\n    return !!n && !!n[Q];\n}\nfunction r(n) {\n    return !!n && (function(n) {\n        if (!n || \"object\" != typeof n) return !1;\n        var t = Object.getPrototypeOf(n);\n        if (null === t) return !0;\n        var r = Object.hasOwnProperty.call(t, \"constructor\") && t.constructor;\n        return r === Object || \"function\" == typeof r && Function.toString.call(r) === Z;\n    }(n) || Array.isArray(n) || !!n[L] || !!n.constructor[L] || s(n) || v(n));\n}\nfunction e(r) {\n    return t(r) || n(23, r), r[Q].t;\n}\nfunction i(n, t, r) {\n    void 0 === r && (r = !1), 0 === o(n) ? (r ? Object.keys : nn)(n).forEach(function(e) {\n        r && \"symbol\" == typeof e || t(e, n[e], n);\n    }) : n.forEach(function(r, e) {\n        return t(e, r, n);\n    });\n}\nfunction o(n) {\n    var t = n[Q];\n    return t ? t.i > 3 ? t.i - 4 : t.i : Array.isArray(n) ? 1 : s(n) ? 2 : v(n) ? 3 : 0;\n}\nfunction u(n, t) {\n    return 2 === o(n) ? n.has(t) : Object.prototype.hasOwnProperty.call(n, t);\n}\nfunction a(n, t) {\n    return 2 === o(n) ? n.get(t) : n[t];\n}\nfunction f(n, t, r) {\n    var e = o(n);\n    2 === e ? n.set(t, r) : 3 === e ? (n.delete(t), n.add(r)) : n[t] = r;\n}\nfunction c(n, t) {\n    return n === t ? 0 !== n || 1 / n == 1 / t : n != n && t != t;\n}\nfunction s(n) {\n    return X && n instanceof Map;\n}\nfunction v(n) {\n    return q && n instanceof Set;\n}\nfunction p(n) {\n    return n.o || n.t;\n}\nfunction l(n) {\n    if (Array.isArray(n)) return Array.prototype.slice.call(n);\n    var t = tn(n);\n    delete t[Q];\n    for(var r = nn(t), e = 0; e < r.length; e++){\n        var i = r[e], o = t[i];\n        !1 === o.writable && (o.writable = !0, o.configurable = !0), (o.get || o.set) && (t[i] = {\n            configurable: !0,\n            writable: !0,\n            enumerable: o.enumerable,\n            value: n[i]\n        });\n    }\n    return Object.create(Object.getPrototypeOf(n), t);\n}\nfunction d(n, e) {\n    return void 0 === e && (e = !1), y(n) || t(n) || !r(n) ? n : (o(n) > 1 && (n.set = n.add = n.clear = n.delete = h), Object.freeze(n), e && i(n, function(n, t) {\n        return d(t, !0);\n    }, !0), n);\n}\nfunction h() {\n    n(2);\n}\nfunction y(n) {\n    return null == n || \"object\" != typeof n || Object.isFrozen(n);\n}\nfunction b(t) {\n    var r = rn[t];\n    return r || n(18, t), r;\n}\nfunction m(n, t) {\n    rn[n] || (rn[n] = t);\n}\nfunction _() {\n    return  false || U || n(0), U;\n}\nfunction j(n, t) {\n    t && (b(\"Patches\"), n.u = [], n.s = [], n.v = t);\n}\nfunction O(n) {\n    g(n), n.p.forEach(S), n.p = null;\n}\nfunction g(n) {\n    n === U && (U = n.l);\n}\nfunction w(n) {\n    return U = {\n        p: [],\n        l: U,\n        h: n,\n        m: !0,\n        _: 0\n    };\n}\nfunction S(n) {\n    var t = n[Q];\n    0 === t.i || 1 === t.i ? t.j() : t.O = !0;\n}\nfunction P(t, e) {\n    e._ = e.p.length;\n    var i = e.p[0], o = void 0 !== t && t !== i;\n    return e.h.g || b(\"ES5\").S(e, t, o), o ? (i[Q].P && (O(e), n(4)), r(t) && (t = M(e, t), e.l || x(e, t)), e.u && b(\"Patches\").M(i[Q], t, e.u, e.s)) : t = M(e, i, []), O(e), e.u && e.v(e.u, e.s), t !== H ? t : void 0;\n}\nfunction M(n, t, r) {\n    if (y(t)) return t;\n    var e = t[Q];\n    if (!e) return i(t, function(i, o) {\n        return A(n, e, t, i, o, r);\n    }, !0), t;\n    if (e.A !== n) return t;\n    if (!e.P) return x(n, e.t, !0), e.t;\n    if (!e.I) {\n        e.I = !0, e.A._--;\n        var o = 4 === e.i || 5 === e.i ? e.o = l(e.k) : e.o;\n        i(3 === e.i ? new Set(o) : o, function(t, i) {\n            return A(n, e, o, t, i, r);\n        }), x(n, o, !1), r && n.u && b(\"Patches\").R(e, r, n.u, n.s);\n    }\n    return e.o;\n}\nfunction A(e, i, o, a, c, s) {\n    if ( true && c === o && n(5), t(c)) {\n        var v = M(e, c, s && i && 3 !== i.i && !u(i.D, a) ? s.concat(a) : void 0);\n        if (f(o, a, v), !t(v)) return;\n        e.m = !1;\n    }\n    if (r(c) && !y(c)) {\n        if (!e.h.F && e._ < 1) return;\n        M(e, c), i && i.A.l || x(e, c);\n    }\n}\nfunction x(n, t, r) {\n    void 0 === r && (r = !1), n.h.F && n.m && d(t, r);\n}\nfunction z(n, t) {\n    var r = n[Q];\n    return (r ? p(r) : n)[t];\n}\nfunction I(n, t) {\n    if (t in n) for(var r = Object.getPrototypeOf(n); r;){\n        var e = Object.getOwnPropertyDescriptor(r, t);\n        if (e) return e;\n        r = Object.getPrototypeOf(r);\n    }\n}\nfunction k(n) {\n    n.P || (n.P = !0, n.l && k(n.l));\n}\nfunction E(n) {\n    n.o || (n.o = l(n.t));\n}\nfunction R(n, t, r) {\n    var e = s(t) ? b(\"MapSet\").N(t, r) : v(t) ? b(\"MapSet\").T(t, r) : n.g ? function(n, t) {\n        var r = Array.isArray(n), e = {\n            i: r ? 1 : 0,\n            A: t ? t.A : _(),\n            P: !1,\n            I: !1,\n            D: {},\n            l: t,\n            t: n,\n            k: null,\n            o: null,\n            j: null,\n            C: !1\n        }, i = e, o = en;\n        r && (i = [\n            e\n        ], o = on);\n        var u = Proxy.revocable(i, o), a = u.revoke, f = u.proxy;\n        return e.k = f, e.j = a, f;\n    }(t, r) : b(\"ES5\").J(t, r);\n    return (r ? r.A : _()).p.push(e), e;\n}\nfunction D(e) {\n    return t(e) || n(22, e), function n(t) {\n        if (!r(t)) return t;\n        var e, u = t[Q], c = o(t);\n        if (u) {\n            if (!u.P && (u.i < 4 || !b(\"ES5\").K(u))) return u.t;\n            u.I = !0, e = F(t, c), u.I = !1;\n        } else e = F(t, c);\n        return i(e, function(t, r) {\n            u && a(u.t, t) === r || f(e, t, n(r));\n        }), 3 === c ? new Set(e) : e;\n    }(e);\n}\nfunction F(n, t) {\n    switch(t){\n        case 2:\n            return new Map(n);\n        case 3:\n            return Array.from(n);\n    }\n    return l(n);\n}\nfunction N() {\n    function r(n, t) {\n        var r = s[n];\n        return r ? r.enumerable = t : s[n] = r = {\n            configurable: !0,\n            enumerable: t,\n            get: function() {\n                var t = this[Q];\n                return  true && f(t), en.get(t, n);\n            },\n            set: function(t) {\n                var r = this[Q];\n                 true && f(r), en.set(r, n, t);\n            }\n        }, r;\n    }\n    function e(n) {\n        for(var t = n.length - 1; t >= 0; t--){\n            var r = n[t][Q];\n            if (!r.P) switch(r.i){\n                case 5:\n                    a(r) && k(r);\n                    break;\n                case 4:\n                    o(r) && k(r);\n            }\n        }\n    }\n    function o(n) {\n        for(var t = n.t, r = n.k, e = nn(r), i = e.length - 1; i >= 0; i--){\n            var o = e[i];\n            if (o !== Q) {\n                var a = t[o];\n                if (void 0 === a && !u(t, o)) return !0;\n                var f = r[o], s = f && f[Q];\n                if (s ? s.t !== a : !c(f, a)) return !0;\n            }\n        }\n        var v = !!t[Q];\n        return e.length !== nn(t).length + (v ? 0 : 1);\n    }\n    function a(n) {\n        var t = n.k;\n        if (t.length !== n.t.length) return !0;\n        var r = Object.getOwnPropertyDescriptor(t, t.length - 1);\n        return !(!r || r.get);\n    }\n    function f(t) {\n        t.O && n(3, JSON.stringify(p(t)));\n    }\n    var s = {};\n    m(\"ES5\", {\n        J: function(n, t) {\n            var e = Array.isArray(n), i = function(n, t) {\n                if (n) {\n                    for(var e = Array(t.length), i = 0; i < t.length; i++)Object.defineProperty(e, \"\" + i, r(i, !0));\n                    return e;\n                }\n                var o = tn(t);\n                delete o[Q];\n                for(var u = nn(o), a = 0; a < u.length; a++){\n                    var f = u[a];\n                    o[f] = r(f, n || !!o[f].enumerable);\n                }\n                return Object.create(Object.getPrototypeOf(t), o);\n            }(e, n), o = {\n                i: e ? 5 : 4,\n                A: t ? t.A : _(),\n                P: !1,\n                I: !1,\n                D: {},\n                l: t,\n                t: n,\n                k: i,\n                o: null,\n                O: !1,\n                C: !1\n            };\n            return Object.defineProperty(i, Q, {\n                value: o,\n                writable: !0\n            }), i;\n        },\n        S: function(n, r, o) {\n            o ? t(r) && r[Q].A === n && e(n.p) : (n.u && function n(t) {\n                if (t && \"object\" == typeof t) {\n                    var r = t[Q];\n                    if (r) {\n                        var e = r.t, o = r.k, f = r.D, c = r.i;\n                        if (4 === c) i(o, function(t) {\n                            t !== Q && (void 0 !== e[t] || u(e, t) ? f[t] || n(o[t]) : (f[t] = !0, k(r)));\n                        }), i(e, function(n) {\n                            void 0 !== o[n] || u(o, n) || (f[n] = !1, k(r));\n                        });\n                        else if (5 === c) {\n                            if (a(r) && (k(r), f.length = !0), o.length < e.length) for(var s = o.length; s < e.length; s++)f[s] = !1;\n                            else for(var v = e.length; v < o.length; v++)f[v] = !0;\n                            for(var p = Math.min(o.length, e.length), l = 0; l < p; l++)void 0 === f[l] && n(o[l]);\n                        }\n                    }\n                }\n            }(n.p[0]), e(n.p));\n        },\n        K: function(n) {\n            return 4 === n.i ? o(n) : a(n);\n        }\n    });\n}\nfunction T() {\n    function e(n) {\n        if (!r(n)) return n;\n        if (Array.isArray(n)) return n.map(e);\n        if (s(n)) return new Map(Array.from(n.entries()).map(function(n) {\n            return [\n                n[0],\n                e(n[1])\n            ];\n        }));\n        if (v(n)) return new Set(Array.from(n).map(e));\n        var t = Object.create(Object.getPrototypeOf(n));\n        for(var i in n)t[i] = e(n[i]);\n        return u(n, L) && (t[L] = n[L]), t;\n    }\n    function f(n) {\n        return t(n) ? e(n) : n;\n    }\n    var c = \"add\";\n    m(\"Patches\", {\n        $: function(t, r) {\n            return r.forEach(function(r) {\n                for(var i = r.path, u = r.op, f = t, s = 0; s < i.length - 1; s++){\n                    var v = o(f), p = \"\" + i[s];\n                    0 !== v && 1 !== v || \"__proto__\" !== p && \"constructor\" !== p || n(24), \"function\" == typeof f && \"prototype\" === p && n(24), \"object\" != typeof (f = a(f, p)) && n(15, i.join(\"/\"));\n                }\n                var l = o(f), d = e(r.value), h = i[i.length - 1];\n                switch(u){\n                    case \"replace\":\n                        switch(l){\n                            case 2:\n                                return f.set(h, d);\n                            case 3:\n                                n(16);\n                            default:\n                                return f[h] = d;\n                        }\n                    case c:\n                        switch(l){\n                            case 1:\n                                return f.splice(h, 0, d);\n                            case 2:\n                                return f.set(h, d);\n                            case 3:\n                                return f.add(d);\n                            default:\n                                return f[h] = d;\n                        }\n                    case \"remove\":\n                        switch(l){\n                            case 1:\n                                return f.splice(h, 1);\n                            case 2:\n                                return f.delete(h);\n                            case 3:\n                                return f.delete(r.value);\n                            default:\n                                return delete f[h];\n                        }\n                    default:\n                        n(17, u);\n                }\n            }), t;\n        },\n        R: function(n, t, r, e) {\n            switch(n.i){\n                case 0:\n                case 4:\n                case 2:\n                    return function(n, t, r, e) {\n                        var o = n.t, s = n.o;\n                        i(n.D, function(n, i) {\n                            var v = a(o, n), p = a(s, n), l = i ? u(o, n) ? \"replace\" : c : \"remove\";\n                            if (v !== p || \"replace\" !== l) {\n                                var d = t.concat(n);\n                                r.push(\"remove\" === l ? {\n                                    op: l,\n                                    path: d\n                                } : {\n                                    op: l,\n                                    path: d,\n                                    value: p\n                                }), e.push(l === c ? {\n                                    op: \"remove\",\n                                    path: d\n                                } : \"remove\" === l ? {\n                                    op: c,\n                                    path: d,\n                                    value: f(v)\n                                } : {\n                                    op: \"replace\",\n                                    path: d,\n                                    value: f(v)\n                                });\n                            }\n                        });\n                    }(n, t, r, e);\n                case 5:\n                case 1:\n                    return function(n, t, r, e) {\n                        var i = n.t, o = n.D, u = n.o;\n                        if (u.length < i.length) {\n                            var a = [\n                                u,\n                                i\n                            ];\n                            i = a[0], u = a[1];\n                            var s = [\n                                e,\n                                r\n                            ];\n                            r = s[0], e = s[1];\n                        }\n                        for(var v = 0; v < i.length; v++)if (o[v] && u[v] !== i[v]) {\n                            var p = t.concat([\n                                v\n                            ]);\n                            r.push({\n                                op: \"replace\",\n                                path: p,\n                                value: f(u[v])\n                            }), e.push({\n                                op: \"replace\",\n                                path: p,\n                                value: f(i[v])\n                            });\n                        }\n                        for(var l = i.length; l < u.length; l++){\n                            var d = t.concat([\n                                l\n                            ]);\n                            r.push({\n                                op: c,\n                                path: d,\n                                value: f(u[l])\n                            });\n                        }\n                        i.length < u.length && e.push({\n                            op: \"replace\",\n                            path: t.concat([\n                                \"length\"\n                            ]),\n                            value: i.length\n                        });\n                    }(n, t, r, e);\n                case 3:\n                    return function(n, t, r, e) {\n                        var i = n.t, o = n.o, u = 0;\n                        i.forEach(function(n) {\n                            if (!o.has(n)) {\n                                var i = t.concat([\n                                    u\n                                ]);\n                                r.push({\n                                    op: \"remove\",\n                                    path: i,\n                                    value: n\n                                }), e.unshift({\n                                    op: c,\n                                    path: i,\n                                    value: n\n                                });\n                            }\n                            u++;\n                        }), u = 0, o.forEach(function(n) {\n                            if (!i.has(n)) {\n                                var o = t.concat([\n                                    u\n                                ]);\n                                r.push({\n                                    op: c,\n                                    path: o,\n                                    value: n\n                                }), e.unshift({\n                                    op: \"remove\",\n                                    path: o,\n                                    value: n\n                                });\n                            }\n                            u++;\n                        });\n                    }(n, t, r, e);\n            }\n        },\n        M: function(n, t, r, e) {\n            r.push({\n                op: \"replace\",\n                path: [],\n                value: t === H ? void 0 : t\n            }), e.push({\n                op: \"replace\",\n                path: [],\n                value: n.t\n            });\n        }\n    });\n}\nfunction C() {\n    function t(n, t) {\n        function r() {\n            this.constructor = n;\n        }\n        a(n, t), n.prototype = (r.prototype = t.prototype, new r);\n    }\n    function e(n) {\n        n.o || (n.D = new Map, n.o = new Map(n.t));\n    }\n    function o(n) {\n        n.o || (n.o = new Set, n.t.forEach(function(t) {\n            if (r(t)) {\n                var e = R(n.A.h, t, n);\n                n.p.set(t, e), n.o.add(e);\n            } else n.o.add(t);\n        }));\n    }\n    function u(t) {\n        t.O && n(3, JSON.stringify(p(t)));\n    }\n    var a = function(n, t) {\n        return (a = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(n, t) {\n            n.__proto__ = t;\n        } || function(n, t) {\n            for(var r in t)t.hasOwnProperty(r) && (n[r] = t[r]);\n        })(n, t);\n    }, f = function() {\n        function n(n, t) {\n            return this[Q] = {\n                i: 2,\n                l: t,\n                A: t ? t.A : _(),\n                P: !1,\n                I: !1,\n                o: void 0,\n                D: void 0,\n                t: n,\n                k: this,\n                C: !1,\n                O: !1\n            }, this;\n        }\n        t(n, Map);\n        var o = n.prototype;\n        return Object.defineProperty(o, \"size\", {\n            get: function() {\n                return p(this[Q]).size;\n            }\n        }), o.has = function(n) {\n            return p(this[Q]).has(n);\n        }, o.set = function(n, t) {\n            var r = this[Q];\n            return u(r), p(r).has(n) && p(r).get(n) === t || (e(r), k(r), r.D.set(n, !0), r.o.set(n, t), r.D.set(n, !0)), this;\n        }, o.delete = function(n) {\n            if (!this.has(n)) return !1;\n            var t = this[Q];\n            return u(t), e(t), k(t), t.D.set(n, !1), t.o.delete(n), !0;\n        }, o.clear = function() {\n            var n = this[Q];\n            u(n), p(n).size && (e(n), k(n), n.D = new Map, i(n.t, function(t) {\n                n.D.set(t, !1);\n            }), n.o.clear());\n        }, o.forEach = function(n, t) {\n            var r = this;\n            p(this[Q]).forEach(function(e, i) {\n                n.call(t, r.get(i), i, r);\n            });\n        }, o.get = function(n) {\n            var t = this[Q];\n            u(t);\n            var i = p(t).get(n);\n            if (t.I || !r(i)) return i;\n            if (i !== t.t.get(n)) return i;\n            var o = R(t.A.h, i, t);\n            return e(t), t.o.set(n, o), o;\n        }, o.keys = function() {\n            return p(this[Q]).keys();\n        }, o.values = function() {\n            var n, t = this, r = this.keys();\n            return (n = {})[V] = function() {\n                return t.values();\n            }, n.next = function() {\n                var n = r.next();\n                return n.done ? n : {\n                    done: !1,\n                    value: t.get(n.value)\n                };\n            }, n;\n        }, o.entries = function() {\n            var n, t = this, r = this.keys();\n            return (n = {})[V] = function() {\n                return t.entries();\n            }, n.next = function() {\n                var n = r.next();\n                if (n.done) return n;\n                var e = t.get(n.value);\n                return {\n                    done: !1,\n                    value: [\n                        n.value,\n                        e\n                    ]\n                };\n            }, n;\n        }, o[V] = function() {\n            return this.entries();\n        }, n;\n    }(), c = function() {\n        function n(n, t) {\n            return this[Q] = {\n                i: 3,\n                l: t,\n                A: t ? t.A : _(),\n                P: !1,\n                I: !1,\n                o: void 0,\n                t: n,\n                k: this,\n                p: new Map,\n                O: !1,\n                C: !1\n            }, this;\n        }\n        t(n, Set);\n        var r = n.prototype;\n        return Object.defineProperty(r, \"size\", {\n            get: function() {\n                return p(this[Q]).size;\n            }\n        }), r.has = function(n) {\n            var t = this[Q];\n            return u(t), t.o ? !!t.o.has(n) || !(!t.p.has(n) || !t.o.has(t.p.get(n))) : t.t.has(n);\n        }, r.add = function(n) {\n            var t = this[Q];\n            return u(t), this.has(n) || (o(t), k(t), t.o.add(n)), this;\n        }, r.delete = function(n) {\n            if (!this.has(n)) return !1;\n            var t = this[Q];\n            return u(t), o(t), k(t), t.o.delete(n) || !!t.p.has(n) && t.o.delete(t.p.get(n));\n        }, r.clear = function() {\n            var n = this[Q];\n            u(n), p(n).size && (o(n), k(n), n.o.clear());\n        }, r.values = function() {\n            var n = this[Q];\n            return u(n), o(n), n.o.values();\n        }, r.entries = function() {\n            var n = this[Q];\n            return u(n), o(n), n.o.entries();\n        }, r.keys = function() {\n            return this.values();\n        }, r[V] = function() {\n            return this.values();\n        }, r.forEach = function(n, t) {\n            for(var r = this.values(), e = r.next(); !e.done;)n.call(t, e.value, e.value, this), e = r.next();\n        }, n;\n    }();\n    m(\"MapSet\", {\n        N: function(n, t) {\n            return new f(n, t);\n        },\n        T: function(n, t) {\n            return new c(n, t);\n        }\n    });\n}\nfunction J() {\n    N(), C(), T();\n}\nfunction K(n) {\n    return n;\n}\nfunction $(n) {\n    return n;\n}\nvar G, U, W = \"undefined\" != typeof Symbol && \"symbol\" == typeof Symbol(\"x\"), X = \"undefined\" != typeof Map, q = \"undefined\" != typeof Set, B = \"undefined\" != typeof Proxy && void 0 !== Proxy.revocable && \"undefined\" != typeof Reflect, H = W ? Symbol.for(\"immer-nothing\") : ((G = {})[\"immer-nothing\"] = !0, G), L = W ? Symbol.for(\"immer-draftable\") : \"__$immer_draftable\", Q = W ? Symbol.for(\"immer-state\") : \"__$immer_state\", V = \"undefined\" != typeof Symbol && Symbol.iterator || \"@@iterator\", Y = {\n    0: \"Illegal state\",\n    1: \"Immer drafts cannot have computed properties\",\n    2: \"This object has been frozen and should not be mutated\",\n    3: function(n) {\n        return \"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" + n;\n    },\n    4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n    5: \"Immer forbids circular references\",\n    6: \"The first or second argument to `produce` must be a function\",\n    7: \"The third argument to `produce` must be a function or undefined\",\n    8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n    9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n    10: \"The given draft is already finalized\",\n    11: \"Object.defineProperty() cannot be used on an Immer draft\",\n    12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n    13: \"Immer only supports deleting array indices\",\n    14: \"Immer only supports setting array indices and the 'length' property\",\n    15: function(n) {\n        return \"Cannot apply patch, path doesn't resolve: \" + n;\n    },\n    16: 'Sets cannot have \"replace\" patches.',\n    17: function(n) {\n        return \"Unsupported patch operation: \" + n;\n    },\n    18: function(n) {\n        return \"The plugin for '\" + n + \"' has not been loaded into Immer. To enable the plugin, import and call `enable\" + n + \"()` when initializing your application.\";\n    },\n    20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n    21: function(n) {\n        return \"produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '\" + n + \"'\";\n    },\n    22: function(n) {\n        return \"'current' expects a draft, got: \" + n;\n    },\n    23: function(n) {\n        return \"'original' expects a draft, got: \" + n;\n    },\n    24: \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n}, Z = \"\" + Object.prototype.constructor, nn = \"undefined\" != typeof Reflect && Reflect.ownKeys ? Reflect.ownKeys : void 0 !== Object.getOwnPropertySymbols ? function(n) {\n    return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n));\n} : Object.getOwnPropertyNames, tn = Object.getOwnPropertyDescriptors || function(n) {\n    var t = {};\n    return nn(n).forEach(function(r) {\n        t[r] = Object.getOwnPropertyDescriptor(n, r);\n    }), t;\n}, rn = {}, en = {\n    get: function(n, t) {\n        if (t === Q) return n;\n        var e = p(n);\n        if (!u(e, t)) return function(n, t, r) {\n            var e, i = I(t, r);\n            return i ? \"value\" in i ? i.value : null === (e = i.get) || void 0 === e ? void 0 : e.call(n.k) : void 0;\n        }(n, e, t);\n        var i = e[t];\n        return n.I || !r(i) ? i : i === z(n.t, t) ? (E(n), n.o[t] = R(n.A.h, i, n)) : i;\n    },\n    has: function(n, t) {\n        return t in p(n);\n    },\n    ownKeys: function(n) {\n        return Reflect.ownKeys(p(n));\n    },\n    set: function(n, t, r) {\n        var e = I(p(n), t);\n        if (null == e ? void 0 : e.set) return e.set.call(n.k, r), !0;\n        if (!n.P) {\n            var i = z(p(n), t), o = null == i ? void 0 : i[Q];\n            if (o && o.t === r) return n.o[t] = r, n.D[t] = !1, !0;\n            if (c(r, i) && (void 0 !== r || u(n.t, t))) return !0;\n            E(n), k(n);\n        }\n        return n.o[t] === r && \"number\" != typeof r && (void 0 !== r || t in n.o) || (n.o[t] = r, n.D[t] = !0, !0);\n    },\n    deleteProperty: function(n, t) {\n        return void 0 !== z(n.t, t) || t in n.t ? (n.D[t] = !1, E(n), k(n)) : delete n.D[t], n.o && delete n.o[t], !0;\n    },\n    getOwnPropertyDescriptor: function(n, t) {\n        var r = p(n), e = Reflect.getOwnPropertyDescriptor(r, t);\n        return e ? {\n            writable: !0,\n            configurable: 1 !== n.i || \"length\" !== t,\n            enumerable: e.enumerable,\n            value: r[t]\n        } : e;\n    },\n    defineProperty: function() {\n        n(11);\n    },\n    getPrototypeOf: function(n) {\n        return Object.getPrototypeOf(n.t);\n    },\n    setPrototypeOf: function() {\n        n(12);\n    }\n}, on = {};\ni(en, function(n, t) {\n    on[n] = function() {\n        return arguments[0] = arguments[0][0], t.apply(this, arguments);\n    };\n}), on.deleteProperty = function(t, r) {\n    return  true && isNaN(parseInt(r)) && n(13), en.deleteProperty.call(this, t[0], r);\n}, on.set = function(t, r, e) {\n    return  true && \"length\" !== r && isNaN(parseInt(r)) && n(14), en.set.call(this, t[0], r, e, t[0]);\n};\nvar un = function() {\n    function e(t) {\n        var e = this;\n        this.g = B, this.F = !0, this.produce = function(t, i, o) {\n            if (\"function\" == typeof t && \"function\" != typeof i) {\n                var u = i;\n                i = t;\n                var a = e;\n                return function(n) {\n                    var t = this;\n                    void 0 === n && (n = u);\n                    for(var r = arguments.length, e = Array(r > 1 ? r - 1 : 0), o = 1; o < r; o++)e[o - 1] = arguments[o];\n                    return a.produce(n, function(n) {\n                        var r;\n                        return (r = i).call.apply(r, [\n                            t,\n                            n\n                        ].concat(e));\n                    });\n                };\n            }\n            var f;\n            if (\"function\" != typeof i && n(6), void 0 !== o && \"function\" != typeof o && n(7), r(t)) {\n                var c = w(e), s = R(e, t, void 0), v = !0;\n                try {\n                    f = i(s), v = !1;\n                } finally{\n                    v ? O(c) : g(c);\n                }\n                return \"undefined\" != typeof Promise && f instanceof Promise ? f.then(function(n) {\n                    return j(c, o), P(n, c);\n                }, function(n) {\n                    throw O(c), n;\n                }) : (j(c, o), P(f, c));\n            }\n            if (!t || \"object\" != typeof t) {\n                if ((f = i(t)) === H) return;\n                return void 0 === f && (f = t), e.F && d(f, !0), f;\n            }\n            n(21, t);\n        }, this.produceWithPatches = function(n, t) {\n            return \"function\" == typeof n ? function(t) {\n                for(var r = arguments.length, i = Array(r > 1 ? r - 1 : 0), o = 1; o < r; o++)i[o - 1] = arguments[o];\n                return e.produceWithPatches(t, function(t) {\n                    return n.apply(void 0, [\n                        t\n                    ].concat(i));\n                });\n            } : [\n                e.produce(n, t, function(n, t) {\n                    r = n, i = t;\n                }),\n                r,\n                i\n            ];\n            var r, i;\n        }, \"boolean\" == typeof (null == t ? void 0 : t.useProxies) && this.setUseProxies(t.useProxies), \"boolean\" == typeof (null == t ? void 0 : t.autoFreeze) && this.setAutoFreeze(t.autoFreeze);\n    }\n    var i = e.prototype;\n    return i.createDraft = function(e) {\n        r(e) || n(8), t(e) && (e = D(e));\n        var i = w(this), o = R(this, e, void 0);\n        return o[Q].C = !0, g(i), o;\n    }, i.finishDraft = function(t, r) {\n        var e = t && t[Q];\n         true && (e && e.C || n(9), e.I && n(10));\n        var i = e.A;\n        return j(i, r), P(void 0, i);\n    }, i.setAutoFreeze = function(n) {\n        this.F = n;\n    }, i.setUseProxies = function(t) {\n        t && !B && n(20), this.g = t;\n    }, i.applyPatches = function(n, r) {\n        var e;\n        for(e = r.length - 1; e >= 0; e--){\n            var i = r[e];\n            if (0 === i.path.length && \"replace\" === i.op) {\n                n = i.value;\n                break;\n            }\n        }\n        var o = b(\"Patches\").$;\n        return t(n) ? o(n, r) : this.produce(n, function(n) {\n            return o(n, r.slice(e + 1));\n        });\n    }, e;\n}(), an = new un, fn = an.produce, cn = an.produceWithPatches.bind(an), sn = an.setAutoFreeze.bind(an), vn = an.setUseProxies.bind(an), pn = an.applyPatches.bind(an), ln = an.createDraft.bind(an), dn = an.finishDraft.bind(an);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (fn);\n //# sourceMappingURL=immer.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/immer/dist/immer.esm.js\n");

/***/ })

};
;