"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _components_ComingSoon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/ComingSoon */ \"(app-pages-browser)/./src/components/ComingSoon.tsx\");\n/* harmony import */ var aws_amplify__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! aws-amplify */ \"(app-pages-browser)/./node_modules/aws-amplify/dist/esm/initSingleton.mjs\");\n/* harmony import */ var aws_amplify_storage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! aws-amplify/storage */ \"(app-pages-browser)/./node_modules/@aws-amplify/storage/dist/esm/providers/s3/apis/getUrl.mjs\");\n/* harmony import */ var papaparse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! papaparse */ \"(app-pages-browser)/./node_modules/papaparse/papaparse.min.js\");\n/* harmony import */ var papaparse__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(papaparse__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _aws_exports__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../aws-exports */ \"(app-pages-browser)/./src/aws-exports.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\naws_amplify__WEBPACK_IMPORTED_MODULE_5__.DefaultAmplify.configure(_aws_exports__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\nconst App = ()=>{\n    _s();\n    const [signedUrl, setSignedUrl] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(null);\n    const [csvData, setCsvData] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        // Define a function to parse CSV\n        const parseCSV = async ()=>{\n            try {\n                setLoading(true);\n                if (!signedUrl) {\n                    console.error(\"No signed URL available\");\n                    setLoading(false);\n                    return;\n                }\n                const response = await fetch(signedUrl.url.href);\n                const csvText = await response.text();\n                const parsedCSV = papaparse__WEBPACK_IMPORTED_MODULE_2___default().parse(csvText, {\n                    header: true,\n                    preview: 10\n                });\n                setCsvData(parsedCSV.data); // Access parsed CSV data\n                setLoading(false);\n            } catch (error) {\n                console.error(\"Error parsing CSV:\", error);\n                setLoading(false);\n            }\n        };\n        // Call parseCSV function whenever signedUrl changes\n        if (signedUrl) {\n            parseCSV();\n        }\n    }, [\n        signedUrl\n    ]); // useEffect will run whenever signedUrl changes\n    const fetchUrl = async (filename)=>{\n        try {\n            setLoading(true);\n            const getUrlResult = await (0,aws_amplify_storage__WEBPACK_IMPORTED_MODULE_6__.getUrl)({\n                key: filename,\n                options: {\n                    accessLevel: \"guest\",\n                    validateObjectExistence: true,\n                    expiresIn: 20,\n                    useAccelerateEndpoint: false\n                }\n            });\n            setSignedUrl(getUrlResult);\n            setLoading(false);\n        } catch (error) {\n            console.error(\"Error fetching URL:\", error);\n            setLoading(false);\n        }\n    };\n    const labels = csvData.map((row)=>String(row.City));\n    const values = csvData.map((row)=>Number(row.Value)); // Convert 'Value' to numbers\n    return(// <Authenticator>\n    //   {({ signOut, user }) => (\n    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ComingSoon__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {}, void 0, false, {\n        fileName: \"C:\\\\Users\\\\bo_su\\\\the-grid-2\\\\src\\\\app\\\\page.tsx\",\n        lineNumber: 95,\n        columnNumber: 5\n    }, undefined));\n};\n_s(App, \"mjB2Wg6Pxwl13amTxdF2sS+kQA4=\");\n_c = App;\n/* harmony default export */ __webpack_exports__[\"default\"] = (App);\nvar _c;\n$RefreshReg$(_c, \"App\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/page.tsx\n"));

/***/ })

});